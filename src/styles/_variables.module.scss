// Color Palette
$zoom-blue: #00BFB2;
$artic-white: #F4F4F9;
$dark-blue: #171926;

@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap');

// Font Define
$primaryFont: 'Montserrat', sans-serif;

$titleSize: 2.25rem;
$subHeader: 1.125rem;
$paraSize: 1.375rem;

$mobileWidth: 760px;

// Element Size Define
$navHeight: 85px;
$wrapMaxWidth: 1200px;
$widthPadding: 5%;
$desktopPadding: 150px;
$desktopSmallPadding: 60px;
$mobilePadding: 80px;

$defaultBorder: 15px;
$mobileBorder: 25px;

$masOscuro: #171926;
$oscuro: #2D3346;
$midnight: #383E5F;
$mist: #B8C3D0;
$minimal: #F4F4F8;
$blanco: #FFF;
$azure: #3C86A5;
$coral: #CB5E65;
$forest: #799884;
$purple: #9264E9;
$white: #FFF;

// Dark colors
$onyx: #191C21;
$jetBlack: #14171C;
$raven: #262930;
$steelBlue: #2B313C;
$cloud: #687077;

:export {
    masOscuro: $masOscuro;
    oscuro: $oscuro;
    midnight: $midnight;
    mist: $mist;
    minimal: $minimal;
    blanco: $blanco;
    azure: $azure;
    coral: $coral;
    forest: $forest;
    purple: $purple;
    onyx: $onyx;
    jetBlack: $jetBlack;
    raven: $raven;
    steelBlue: $steelBlue;
    cloud: $cloud;
    lightBase: getColor(lightBase);
    lightdarkBase: getColor(lightdarkBase);
    defaultBorder: $defaultBorder;
    mobileWidth: $mobileWidth;
}


// Light Theme
$colors: (
    // base
    lightBase: $blanco,
    lightdarkBase: $minimal,
    lightLightBase: $blanco,
    lightLightBase2: $minimal,
    lightLightBase3: $minimal,
    darkestDark: $masOscuro,
    darkLightBase: $mist,
    darkBase:$oscuro,
    darkBase2:$steelBlue,

    // Btn Based
    lightDarkText: $midnight,

    // Nav Text
    menuText: $midnight,

    // Icon Based
    icn-lightBG: $minimal,
    icon-lightTXT: $midnight,

    // Text
    textTitle: $azure,
    textHeader: $midnight,
    textHeaderDarkBG: $blanco,
    textSubTitle: $mist,
    normalText: $midnight,

    // Color Specific
    azureToMist: $azure,
    azureToSteelBlue: $azure,
    whiteToAzure: $white,
    whiteToRaven: $white,
    midnightToRaven:$midnight,
    mistToCloud: $mist,
);

// Dark Theme
$colors-dark: (
    // base
    lightBase: $onyx,
    lightdarkBase: $jetBlack,
    lightLightBase: $raven,
    lightLightBase2: $steelBlue,
    lightLightBase3: $raven,
    darkLightBase: $steelBlue,
    darkestDark: $jetBlack,
    darkBase:$oscuro,
    darkBase2: $steelBlue,

    // Btn Based
    lightDarkText: $minimal,

    // Nav Text
    menuText: $cloud,

    // Icon Based
    icn-lightBG: $raven,
    icon-lightTXT: $cloud,

    // Text
    textTitle: $azure,
    textHeader: $minimal,
    textHeaderDarkBG: $blanco,
    textSubTitle: $cloud,
    normalText: $cloud,
    
    // Color Specific
    azureToMist: $mist,
    azureToSteelBlue: $steelBlue,
    whiteToAzure: $azure,
    whiteToRaven: $raven,
    midnightToRaven:$raven,
    mistToCloud: $cloud,
);

:root {
    @each $name, $color in $colors {
      --color-#{$name} : #{$color};
    }
}

// Dark Mode
@media(prefers-color-scheme: dark) {
    :root {
        @each $name, $color in $colors-dark{
        --color-#{$name} : #{$color};
        }
    }
}
  
@function getColor($color-name){
    @return var(--color-#{$color-name});
}

// Responsive
@mixin responsive($size) {
    @if $size == 'tablet' {
        @media screen and (max-width:$mobileWidth) {
            @content;
        }
    } @else if $size == 'desktop' {
        @media screen and (min-width:761px) {
            @content;
        }
    }
}

@mixin sectionPadding($layout) {
    @if $layout == 'mobile' {
        padding: $mobilePadding $widthPadding;
    }
    @else if $layout == 'desktop' {
        padding: $desktopPadding $widthPadding;
    }
}

// Object Definitions
@mixin objectShadow($state, $color) {
    @if $color == 'snow' {
        @if $state == 'default' {
            box-shadow:0px 10px 30px rgba(0, 0, 0, .08) !important;
        } @else if $state == 'hover' {
            box-shadow:0px 10px 30px rgba($midnight, .2) !important;
        }
    }

    @else if $state == 'default' and $color == 'azure' {
        box-shadow:0px 5px 20px rgba($azure, .3);
    }

    @else if $state == 'default' and $color == 'midnight' {
        box-shadow:0px 10px 20px rgba($midnight, .2) !important;
    }
}

@mixin objectCorner($type) {
    @if $type == 'default' {
        border-radius:$defaultBorder !important;

        @include responsive('tablet') {
            border-radius:$mobileBorder !important;
        }
    }

    @else if $type == 'mobile' {
        border-radius:$mobileBorder !important;
    }

    @else if $type == 'circular' {
        border-radius:50%;
    }
}