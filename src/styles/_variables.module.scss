// Color Palette
$zoom-blue: #00bfb2;
$artic-white: #f4f4f9;
$dark-blue: #171926;

@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap");

// Define Font
$primaryFont: "Inter", sans-serif;
$font-header: "Montserrat", sans-serif;
$font-body: "Inter", sans-serif;

// Defone Shadow
$shadow-sm: 0px 10px 20px rgb(0 0 0 / 5%);
$shadow-md: 0px 15px 25px -5px rgb(0 0 0 / 10%);
$shadow-xl: 0px 48px 100px 0px rgb(17 12 46 / 15%);

// Define Border
$border-sm: 10px;

// Define Padding
$padding-sm: 30px 25px;

$titleSize: 2.25rem;
$subHeader: 1.125rem;
$paraSize: 1.375rem;

$mobileWidth: 760px;
$small-mobileWidth: 360px;

// Element Size Define
$navHeight: 70px;
$navMobileHeight: 50px;
$wrapMaxWidth: 1400px;
$widthPadding: 7%;
$desktopPadding: 150px;
$desktopSmallPadding: 60px;
$mobilePadding: 80px;

// *** New Color Palette *** //

// Global
$global_white: #ffffff;
$global_black: #000000;

// Primary Azure
$primary_azure-600: #3fa7d3;
$primary_azure-500: #3c99c0;
$primary_azure-400: #3c86a5;

$azure-600: #3fa7d3;
$azure-500: #3c99c0;
$azure-400: #3c86a5;

// Sky
$sky_pearl-100: #fafafa;
$sky_minimal-200: #f4f4f6;
$sky_cotton-300: #f2f2f4;
$sky_smoke-400: #e3e3e8;
$sky_ford-500: #b8c3d0;
$sky_lavender-600: #c0c6d7;
$sky_slate-700: #7682a8;

$sky-100: #fafafa;
$sky-200: #f4f4f6;
$sky-300: #f2f2f4;
$sky-400: #e3e3e8;
$sky-500: #b8c3d0;
$sky-600: #c0c6d7;
$sky-700: #7682a8;

// Midnight
$midnight_charcoal-100: #151923;
$midnight_ebony-200: #171b26;
$midnight_mirage-300: #1b202c;
$midnight_obsidian-400: #212636;
$midnight_bunting-500: #292f42;
$midnight_express-600: #454f6d;
$midnight_tuna-700: #444a53;
$midnight_storm-800: #747781;

$midnight-100: #151923;
$midnight-200: #171b26;
$midnight-300: #1b202c;
$midnight-400: #212636;
$midnight-500: #292f42;
$midnight-600: #454f6d;
$midnight-700: #444a53;
$midnight-800: #747781;

$interface: (
  primary: $primary_azure-500,
  background: $global_white,
  sideground: $sky_pearl-100,
  secground: $sky_pearl-100,
  triground: $midnight_mirage-300,
  surface: $global_white,
  card: $global_white,
  card-hover: $global_white,
  card-active: $sky-cotton_300,
  border: $sky_minimal-200,
  border-active: $sky_smoke-400,
  tagline: $sky_ford-500,
  headline: $midnight_ebony-200,
  subline: $midnight_storm-800,
  body: $midnight_tuna-700,
);
$interface-dark: (
  primary: $primary_azure-500,
  background: $midnight_ebony-200,
  sideground: $midnight_charcoal-100,
  secground: $sky_pearl-100,
  triground: $midnight_ebony-200,
  surface: $midnight_mirage-300,
  card: $midnight_mirage-300,
  card-hover: $midnight_obsidian-400,
  card-active: $midnight_ebony-200,
  border: $midnight_bunting-500,
  border-active: $midnight_bunting-500,
  tagline: $midnight_express-600,
  headline: $global_white,
  subline: $sky_slate-700,
  body: $sky_lavender-600,
);

$defaultBorder: 10px;
$mobileBorder: 10px;

$masOscuro: #171926;
$oscuro: #2d3346;
$midnight: #383e5f;
$mist: #b8c3d0;
$minimal: #f4f4f8;
$blanco: #fff;
$azure: #3c86a5;
$coral: #cb5e65;
$forest: #799884;
$purple: #9264e9;
$white: #fff;

// Dark colors
$onyx: #191c21;
// $onyx: #1e2329;
$jetBlack: #14171c;
// $raven: #262930;
$raven: #1e2329;
$steelBlue: #2b313c;
$cloud: #687077;
$clude: #7f8197;
$crow: #181c21;

// Current Color Palette ðŸ‘€
$color-azure: #3c86a5;
$color-midnight: #2d3346;
$color-oscuro: #171926;
$color-white: #fff;
$color-crystal: #fff;
$color-snow: #f4f4f8;
$color-rice: #e6e6ef;
$color-mist: #b8c3d0;
$color-cloud: #656d78;
$color-space: #444a53;
$color-sable: #2d3136;
$color-coal: #232629;
$color-satin: #1b1d20;
$color-soot: #151719;
$color-jetBlack: #060707;

$theme: (
  base: $color-crystal,
  baseDark: $color-snow,
  baseLight: $color-crystal,
  basePrimary: $color-crystal,
  basePrimaryLight: $color-crystal,
  baseSecondary: $color-sable,
  baseTeriary: $color-coal,
  surface: $color-snow,
  headline: $color-sable,
  body: $color-space,
  tagline: $color-mist,
  borderBase: $color-rice,
  borderBaseMinimal: $color-snow,
  surfaceCard: $color-midnight,
  whiteToSable: $color-snow,
);

$theme-dark: (
  base: $color-jetBlack,
  baseDark: $color-soot,
  baseLight: $color-soot,
  basePrimary: $color-coal,
  basePrimaryLight: $color-satin,
  baseSecondary: $color-coal,
  baseTeriary: $color-coal,
  surface: $color-satin,
  headline: $color-crystal,
  body: $color-cloud,
  tagline: $color-space,
  borderBase: $color-coal,
  borderBaseMinimal: $color-coal,
  surfaceCard: $color-coal,
  whiteToSable: $color-sable,
);

:export {
  masOscuro: $masOscuro;
  oscuro: $oscuro;
  midnight: $midnight;
  mist: $mist;
  minimal: $minimal;
  blanco: $blanco;
  azure: $azure;
  coral: $coral;
  forest: $forest;
  purple: $purple;
  onyx: $onyx;
  jetBlack: $jetBlack;
  raven: $raven;
  steelBlue: $steelBlue;
  cloud: $cloud;
  lightBase: getColor(lightBase);
  lightdarkBase: getColor(lightdarkBase);
  defaultBorder: $defaultBorder;
  mobileWidth: $mobileWidth;
}

// Light Theme
$colors: (
  // base
    contrastBase: $blanco,
  lightBase: $blanco,
  lightdarkBase: $minimal,
  lightLightBase: $blanco,
  lightLightBase2: $minimal,
  lightLightBase3: $minimal,
  darkestDark: $masOscuro,
  darkLightBase: $mist,
  darkBase: $oscuro,
  darkBase2: $steelBlue,
  darkbase3: $oscuro,
  medDarkBase: $masOscuro,
  lightToLight: $blanco,
  // Btn Based
    lightDarkText: $midnight,
  // Nav Text
    menuText: $midnight,
  // Icon Based
    icn-lightBG: $minimal,
  icon-lightTXT: $midnight,
  // Text
    textTitle: $azure,
  textHeader: $midnight,
  textHeaderDarkBG: $blanco,
  textSubTitle: $mist,
  // normalText: $midnight,
    normalText: #7f8197,
  // Color Specific
    azureToMist: $azure,
  azureToSteelBlue: $azure,
  whiteToAzure: $white,
  whiteToRaven: $white,
  midnightToRaven: $midnight,
  oscuroToRaven: $oscuro,
  oscuroToJetBlack: $oscuro,
  mistToCloud: $mist,
  minimalBase: $minimal
);

// Dark Theme
$colors-dark: (
  // base
    contrastBase: $jetBlack,
  lightBase: $onyx,
  lightdarkBase: $jetBlack,
  lightLightBase: $raven,
  lightLightBase2: $steelBlue,
  lightLightBase3: $raven,
  darkLightBase: $steelBlue,
  darkestDark: $jetBlack,
  darkBase: $oscuro,
  darkBase2: $steelBlue,
  darkbase3: $blanco,
  medDarkBase: $crow,
  lightToLight: $raven,
  // Btn Based
    lightDarkText: $minimal,
  // Nav Text
    menuText: $cloud,
  // Icon Based
    icn-lightBG: $raven,
  icon-lightTXT: $cloud,
  // Text
    textTitle: $azure,
  textHeader: $minimal,
  textHeaderDarkBG: $blanco,
  textSubTitle: $cloud,
  normalText: $cloud,
  // Color Specific
    azureToMist: $mist,
  azureToSteelBlue: $steelBlue,
  whiteToAzure: $azure,
  whiteToRaven: $raven,
  midnightToRaven: $raven,
  oscuroToRaven: $raven,
  oscuroToJetBlack: $jetBlack,
  mistToCloud: $cloud,
  minimalBase: $crow
);

:root {
  @each $name, $color in $colors {
    --color_#{$name}: #{$color};
  }
  @each $name, $color in $theme {
    --color-#{$name}: #{$color};
  }
  @each $name, $color in $interface {
    --clr-#{$name}: #{$color};
  }
}

// Dark Mode
@media (prefers-color-scheme: dark) {
  :root {
    @each $name, $color in $colors-dark {
      --color_#{$name}: #{$color};
    }
    @each $name, $color in $theme-dark {
      --color-#{$name}: #{$color};
    }
    @each $name, $color in $interface-dark {
      --clr-#{$name}: #{$color};
    }
  }
}

@function interface($color-name) {
  @return var(--clr-#{$color-name});
}

@function getColor($color-name) {
  @return var(--color_#{$color-name});
}

@function theme($color-name) {
  @return var(--color-#{$color-name});
}

@mixin sectionTheme($theme) {
  @if $theme == "light" {
    background: interface(secground);
  } @else if $theme == "lighter" {
    background: interface(triground);
  }
}

@mixin card($type) {
  transition: background 250ms linear, box-shadow 250ms linear,
    transform 250ms linear !important;
    border-radius:$border-sm;

    @if $type == "primary" {
    border: 1px solid interface(border);

    &:hover {
      background: interface(card-hover);
      transform: translateY(-2px) !important;
      border: 1px solid interface(card-hover);
      box-shadow: $shadow-md;

      h3 {
        color: interface(headline);
      }
    }

    &:active {
      border:1px solid interface(border-active);
    }

    &:focus {
      border: 1px solid interface(border-active);
      background: interface(card-hover);
      transform: translateY(-2px) !important;
    }
  }
}

@mixin BGTheme($theme) {
  @if $theme == "light" {
    background: theme(base);
  } @else if $theme == "lighter" {
    background: theme(baseLight);
  } @else if $theme == "lightest" {
    background: theme(basePrimaryLight);
  } @else if $theme == "dark" {
    background: theme(borderBaseMinimal);
  } @else if $theme == "darker" {
    background: theme(surface);
  } @else if $theme == "darkest" {
    background: theme(baseDark);
  }
}

@mixin cardStyle($type) {
  transition: background 250ms linear, box-shadow 250ms linear,
    transform 250ms linear !important;
  @include objectCorner("default");

  @if $type == "primary" {
    // background: interface(card);
    border: 1px solid interface(border);

    &:hover {
      // @include objectShadow("hover", "snow");
      background: interface(card-hover);
      transform: translateY(-3px) !important;
      border: 1px solid interface(card-hover);

      h3 {
        color: interface(headline);
      }
    }

    &:active {
      box-shadow: inset 0px 5px 10px rgba(0, 0, 0, 0.1);
    }

    &:focus {
      border: 1px solid theme(borderBase);
      background: theme(basePrimary);
      transform: translateY(-3px) !important;
    }
  } @else if $type == "primaryActive" {
    // background: theme("basePrimary");
    @include BGTheme("lightest");
    border: 1px solid theme(borderBaseMinimal);
    @include objectShadow("default", "snow");

    &:hover {
      @include objectShadow("hover", "snow");
      // background: theme(basePrimary);

      h3 {
        color: theme(headline);
      }
    }

    &:active {
      box-shadow: inset 0px 5px 10px rgba(0, 0, 0, 0.1);
    }

    &:focus {
      border: 1px solid theme(borderBase);
      background: theme(basePrimary);
    }
  } @else if $type == "secondary" {
    background: theme(surface);
    border: 1px solid theme(borderBase);

    &:hover {
      @include objectShadow("hover", "snow");
      background: theme(basePrimary);

      h3 {
        color: theme(headline);
      }
    }
  } @else if $type == "primary-light" {
    background: theme(basePrimaryLight);
    border: 1px solid theme(borderBaseMinimal);

    &:hover {
      @include objectShadow("hover", "snow");
      background: theme(basePrimaryLight);

      h3 {
        color: theme(headline);
      }
    }

    &:active {
      box-shadow: inset 0px 5px 10px rgba(0, 0, 0, 0.1);
    }

    &:focus {
      border: 1px solid theme(borderBase);
      background: theme(basePrimary);
      transform: translateY(-3px) !important;
    }
  } @else if $type == "secondary" {
    background: theme(surface);
    border: 1px solid theme(borderBase);

    &:hover {
      @include objectShadow("hover", "snow");
      background: theme(basePrimary);

      h3 {
        color: theme(headline);
      }
    }
  } @else if $type == "tertiary" {
    background: theme(surface);
    border: 1px solid theme(borderBase);

    &:hover {
      @include objectShadow("hover", "snow");
      background: theme(baseSecondary);

      h3 {
        color: $color-crystal;
      }
    }
  }
}

// Responsive
@mixin responsive($size) {
  @if $size == "small-mobile" {
    @media screen and (max-width: $small-mobileWidth) {
      @content;
    }
  } @else if $size == "mobile" {
    @media screen and (max-width: $mobileWidth) {
      @content;
    }
  } @else if $size == "desktop" {
    @media screen and (min-width: 761px) {
      @content;
    }
  } @else if $size == "desktopish" {
    @media screen and (max-width: 1000px) {
      @content;
    }
  }
}

@mixin sectionPadding($layout) {
  @if $layout == "mobile" {
    padding: $mobilePadding $widthPadding;
  } @else if $layout == "desktop" {
    padding: $desktopPadding $widthPadding;
  } @else if $layout == "desktop-small" {
    padding: 60px $widthPadding;

    @include responsive("mobile") {
      padding: 30px $widthPadding;
    }
  }
}

// Object Definitions
@mixin objectShadow($state, $color) {
  @if $color == "snow" {
    @if $state == "default" {
      // box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.04) !important;
      box-shadow: 0 10px 34px rgb(0 0 0 / 10%) !important;
    } @else if $state == "minimal" {
      box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.07) !important;
    } @else if $state == "hover" {
      box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.1) !important;
    } @else if $state == "active" {
      box-shadow: 0px 10px 30px -5px rgba(0, 0, 0, 0.2) !important;
    } @else if $state == "activeHard" {
      box-shadow: 0px 10px 30px 0px rgba(0, 0, 0, 0.2) !important;
    }
  } @else if $state == "default" and $color == "azure" {
    box-shadow: 0px 5px 20px rgba($azure, 0.4);
  } @else if $state == "hover" and $color == "azure" {
    box-shadow: 0px 5px 20px rgba($azure, 0.5);
  } @else if $state == "default" and $color == "midnight" {
    box-shadow: 0px 10px 20px rgba($midnight, 0.2) !important;
  }
}

@mixin navHeight {
  height: $navMobileHeight;

  @include responsive("mobile") {
    height: $navMobileHeight;
  }
}

@mixin objectCorner($type) {
  @if $type == "default" {
    border-radius: $defaultBorder !important;

    @include responsive("mobile") {
      border-radius: $mobileBorder !important;
    }
  } @else if $type == "default-mobile" {
    border-radius: $defaultBorder !important;
  } @else if $type == "mobile" {
    border-radius: $mobileBorder !important;
  } @else if $type == "circular" {
    border-radius: 50%;
  }
}
